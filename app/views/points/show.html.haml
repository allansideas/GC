#mobile
  #point_nav
    -@point.pages.each do |p|
      -if p.p_type == "info"
        #info.nav
      -if p.p_type == "active"
        #active.nav
      -if p.p_type == "gallery"
        #gallery_nav.nav
  #point.screen
  #activity.screen
  #info_page.screen
  #activity_instance.screen
  #image_zoom.screen
  #point_map
    =gmaps({"markers" => {"data" => @map_json}, "map_options" => {"auto_adjust" => true, "auto_zoom" => false}}, false)

<audio id="press" preload>
<source src="/audio/button_press.mp3" type="audio/mp3" />
<source src="/audio/button_press.ogg" type="audio/ogg" />
</audio>

:javascript
  $(window).load( function() {
      setTimeout(scrollTo,200,0,1);
  });
  $(document).ready(function(){
  var button_press = document.getElementById('press');
  $('.button').live('touchstart', function(e){
    button_press.play();
    $(e.target).addClass('depressed')
  });
  $('.button').live('touchend', function(e){
    $(e.target).removeClass('depressed');
  });
  window.controller = new App.Routers.PointsRouter(
  {activities: #{@point.activities.to_json(:include => :route)}, 
  point: #{@point.to_json}, 
  user : #{current_user.to_json(:only => [:id, :current_activity, :current_activity_instance])},
  activity_instance : #{@activity_instance.to_json if @activity_instance},
  activity : #{@activity.to_json(:include => :route) if @activity},
  marks: #{@marks.to_json if @marks},
  all_activity_instances: #{@all_activity_instances.to_json if @all_activity_instances},
  pages: #{@pages.to_json if @pages}
  });
  Backbone.history.start();
  });

- content_for :scripts do
  :javascript
    Gmaps4Rails.callback = function(){
      console.log(Gmaps.map.markers)
      if (Gmaps.map.markers.length == 1) {
       //only one marker, choose the zoom level you expect
       Gmaps.map.map.setZoom(13);
       //Gmaps.map.map.setCenter(new google.maps.LatLng(#{@point.lat.round(5)},#{@point.lng.round(5)}), 13);
      }
      else{
       console.log("multi");
       //more than one marker, let's auto_zoom
       Gmaps.map_options.auto_zoom = true;
       Gmaps.adjust_map_to_bounds();
      }
    };

